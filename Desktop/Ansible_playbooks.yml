---
- hosts: node
  become: yes
  tasks:
  - name: Ansible create file if it does not exist example
    file:
      path: "/home/ec2-user/gani.txt"
      state: touch
  - name: copy content
    yum:
      name: git
      state: present
  
  
 ---
- hosts:

---
- hosts: node
  become: yes
  tasks:
  - name: Ansible create file if it does not exist example
    file:
      path: "/home/ec2-user/{{ item }}"
      state: touch
    with_items:
    - access.log
    - system.log
    - properties.txt
    - confile.cfg
  

---
- hosts: node
  become: yes
  tasks:
  - name: Ansible create file if it does not exist example
    file:
      path: "/home/ec2-user/{{ item.location }}"
      state: touch
      mode: "/home/ec2-user/{{ item.mode }}"
    with_items:
    - { location: "file1.txt",mode: "0566" }
    - { location: "file2.txt",mode: "0766" }
    

---
- hosts: node
  become: yes
  tasks:
   - name: install maven
    yum:
      name: maven
      state: present
      
------------------------------------------

---
- hosts: node
  become: yes
  tasks:
   - name: download maven and install
     shell: |
      wget http://repos.fedorapeople.org/repos/dchen/apache-maven/epel-apache-maven.repo -O
      /etc/yum.repos.d/epel-apache-maven.repo
      sed -i s/\$releasever/6/g /etc/yum.repos.d/epel-apache-maven.repo
      yum install -y apache-maven
      
      


   - name: download maven and install
     shell: |
      wget http://repos.fedorapeople.org/repos/dchen/apache-maven/epel-apache-maven.repo -O
      /etc/yum.repos.d/epel-apache-maven.repo
      sed -i s/\$releasever/6/g /etc/yum.repos.d/epel-apache-maven.repo
      yum install -y apache-maven

--------------------------------

- hosts: node
  become: yes
  tasks:
  - name: install git
    yum:
      name: git
      state: present
      
      
---------------------------------------------

---
- hosts: nodes
become: yes
tasks:
- name: get the source code
git:
repo: 'https://github.com/ybmadhu/spring3-mvc-maven-xml-hello-world.git'
dest: /home/mylogin/hello
tags: git_download
- name: packing the maven build
shell: " mvn clean package "
args:
chdir: /home/mylogin/hello
- name: copy artifacts to tomcat
copy:
src: /home/mylogin/hello/target/spring3-mvc-maven-xml-hello-world-1.2.war
dest: /opt/apache-tomcat-8.5.66/webapps/
remote_src: true

---------------------------------

---
- name: Print linux distribution and version
 become: root
 hosts: nodes
 tasks:
 - name: capture output of id command
 command: cat /etc/os-release
 register: login
 - debug:
 msg: "{{ login.stdout }}"
Madhu Sudhan Reddy Y.B JMSTechHome +91-8884807341
 - debug:
 msg: version comaparision "{{ ansible_distribution_version is version('7.0','>=') }}"
 - name: Sending an e-mail using Gmail SMTP servers
 mail:
 host: smtp.gmail.com
 port: 587
 secure: starttls
 charset: utf-8
 sender: ballalallallal
 username: ballalallallal
 password: ballalallallal
 to: ballalallallal
 subject: Ansible-report
 body: veresion comparision "{{ ansible_distribution_version is version('7', '>=') }}"
 
 
 ----------------
 
 Data
====
token:      eyJhbGciOiJSUzI1NiIsImtpZCI6IjRYZlpCV0VOZmM1Q1g0OVNNTDRfZERWNU5NRFhRU0pHbWZuakVlLV9QdUkifQ.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJrdWJlLXN5c3RlbSIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VjcmV0Lm5hbWUiOiJhZG1pbi11c2VyLXRva2VuLW16bXdqIiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZXJ2aWNlLWFjY291bnQubmFtZSI6ImFkbWluLXVzZXIiLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlcnZpY2UtYWNjb3VudC51aWQiOiIxOTNlMjUyMS1jNDVjLTRiODUtODJkZi1lZGRhZTRlNjQyNDEiLCJzdWIiOiJzeXN0ZW06c2VydmljZWFjY291bnQ6a3ViZS1zeXN0ZW06YWRtaW4tdXNlciJ9.Jx3NGSpGBwxCkdzHJcMF3rFdoO0_V4SNbgqkeeXqoctvKlt4BAIj1-8ucTl574yL3bAE-jw-Je6n0rUo-KbbaGx2AKO701p-hsYY-fi2n_Xuv4lQt6fgta6kBxfQ_mjGzgpWCusRr9hwgKAqx_wLj5Oy41uNiyl9qaFmr4TiiZrLXUD01lAFsNLsgxT19pjaUUK6uqXgEXv3hhdvuGycLQBK7FxbA13MM_Uz-1_1UxvquMIb5wyQc-OBjKVADBCn-vZ3u187ya-zlvMTFVK_WSH2lfJkwlmF417_jPFptv7fjjT2yJbXORxHj_2R5apQ8k7LErxDjpdkENV4r69Mbg



apiVersion: apps/v1
kind: ReplicaSet
metadata:
 name: hello-deploy
spec:
 replicas: 10
 selector:
 matchLabels:
 app: hello-world
 template:
 metadata:
 labels:
 app: hello-world
 spec:
 containers:
 - name: hello-ctr
 image: nigelpoulton/k8sbook:latest
 ports:
 - containerPort: 8080
 
 
 
 
 
 
 apiVersion: apps/v1
kind: ReplicaSet
metadata:
 name: hello-deploy
spec:
 replicas: 10
 selector:
 matchLabels:
 app: hello-world
 template:
 metadata:
 labels:
 app: hello-world
 spec:
 containers:
 - name: hello-ctr
 image: nigelpoulton/k8sbook:latest
 ports:
 - containerPort: 8080


apiVersion: apps/v1
kind: Deployment
metadata:
  name: node-app-deploy
  labels:
     name: node-app
spec:
  replicas: 3
  selector:
    matchLabels:
      app: node-app
  minReadySeconds: 10
  strategy:
     type: RollingUpdate
     rollingUpdate:
       maxUnavailable: 1
       maxSurge: 1
  template:
     metadata:
       labels:
         app: node-app
     spec:
      containers:
      - name: node-web-app
        image: ybmsr/nodejsapp:v1
        ports:
        - containerPort: 8080

 